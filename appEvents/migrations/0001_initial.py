# Generated by Django 4.2.7 on 2023-12-26 15:26

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(max_length=50, unique=True)),
                ('email', models.EmailField(max_length=100, unique=True)),
                ('nif', models.BigIntegerField(validators=[django.core.validators.MinValueValidator(100000000, message='NIF must be exactly 9 digits'), django.core.validators.MaxValueValidator(999999999, message='NIF must be exactly 9 digits')])),
                ('phonenumber', models.BigIntegerField(null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150)),
                ('duration', models.IntegerField(validators=[django.core.validators.MinValueValidator(0)])),
                ('type', models.CharField(choices=[('Teatro & Arte', 'Teatro & Arte'), ('Cinema', 'Cinema'), ('Stand-up', 'Stand-up'), ('Música', 'Música'), ('Infantil', 'Infantil'), ('Formação & Educação', 'Formação & Educação')], max_length=50)),
                ('summary', models.CharField(max_length=750, null=True)),
                ('description', models.TextField(null=True)),
                ('minimumage', models.IntegerField(validators=[django.core.validators.MinValueValidator(0)])),
                ('poster', models.URLField(max_length=500)),
            ],
        ),
        migrations.CreateModel(
            name='Purchase',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('datepurchase', models.DateField()),
                ('hour', models.TimeField()),
            ],
        ),
        migrations.CreateModel(
            name='Room',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('capacity', models.IntegerField(validators=[django.core.validators.MinValueValidator(0)])),
                ('seatingchart', models.URLField(max_length=500)),
            ],
        ),
        migrations.CreateModel(
            name='Venue',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('city', models.CharField(max_length=50)),
                ('street', models.CharField(max_length=150)),
                ('number', models.CharField(max_length=10)),
                ('postal_code', models.CharField(max_length=8, validators=[django.core.validators.MinLengthValidator(8, message='Postal code must be exactly 8 characters'), django.core.validators.MaxLengthValidator(8, message='Postal code must be exactly 8 characters')])),
                ('phonenumber', models.BigIntegerField(null=True)),
                ('email', models.CharField(max_length=50, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Ticket',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(max_length=100)),
                ('price', models.IntegerField(validators=[django.core.validators.MinValueValidator(0)])),
                ('availability', models.IntegerField(validators=[django.core.validators.MinValueValidator(0)])),
                ('room', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='appEvents.room')),
            ],
        ),
        migrations.CreateModel(
            name='Session',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('datesession', models.DateField()),
                ('hour', models.TimeField()),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='appEvents.event')),
            ],
        ),
        migrations.CreateModel(
            name='Seat',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('seatname', models.CharField(max_length=10)),
                ('ticket', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='appEvents.ticket')),
            ],
        ),
        migrations.AddField(
            model_name='room',
            name='venue',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='appEvents.venue'),
        ),
        migrations.CreateModel(
            name='PurchaseSeat',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('purchase', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='appEvents.purchase')),
                ('seats', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='appEvents.seat')),
            ],
        ),
        migrations.AddField(
            model_name='purchase',
            name='sessions',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='appEvents.session'),
        ),
        migrations.AddField(
            model_name='purchase',
            name='users_nif',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='event',
            name='room',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='appEvents.room'),
        ),
    ]
